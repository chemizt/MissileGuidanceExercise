name: BuildAndDeploy

on:
  push:
      
jobs:
  build-windows:
    runs-on: windows-latest
    env:
      QT_VERSION:     "5.15.2"
      MINGW_VERSION:  "win64_mingw81"
      MINGW_PATH:     "mingw81_64"
      BUILD_TYPE:     MinSizeRel
      BIN_OUTPUT_DIR: ${{github.workspace}}/out
      CMAKE_CONF_DIR: ${{github.workspace}}/build
      STAGING_DIR:    ${{github.workspace}}/artifacts
    
    steps:
    
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Install MinGW
      uses: egor-tensin/setup-mingw@v2
      with:
        version: 8.1.0
    
    - name: Install Qt
      uses: jurplel/install-qt-action@v3.0.0
      with:
        host: windows
        version: ${{ env.QT_VERSION }}
        arch: ${{ env.MINGW_VERSION }}
        dir: "${{github.workspace}}/qt"
        cache: true
        
    - name: Set Qt path and refresh the environment
      run: |
        echo "${{github.workspace}}/qt/Qt/${{ env.QT_VERSION }}/${{ env.MINGW_PATH }}/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        refreshenv
        
    - name: Configure the CMake project
      env:
        CMAKE_PREFIX_PATH: ${{env.Qt5_Dir}}
      run: cmake -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -G "CodeBlocks - MinGW Makefiles" -B $env:CMAKE_CONF_DIR -DCUSTOM_BIN_OUTPUT_ROOT=$env:BIN_OUTPUT_DIR

    - name: Build the project
      run: cmake --build $env:CMAKE_CONF_DIR
      
    - name: Deploy the program
      run: |
        mkdir $env:STAGING_DIR
        cd $env:STAGING_DIR
        cp $env:CMAKE_CONF_DIR/MissileGuidanceExercise.exe $env:STAGING_DIR/
        windeployqt MissileGuidanceExercise.exe --release
        Compress-Archive -Path $env:STAGING_DIR -DestinationPath ${{github.workspace}}/artifacts.zip
    
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Windows-targeted executable package
        path: ${{github.workspace}}/artifacts.zip
